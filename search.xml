<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>钓鱼软件的编写</title>
      <link href="/2022/11/10/%E9%92%93%E9%B1%BC%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%BC%96%E5%86%99/"/>
      <url>/2022/11/10/%E9%92%93%E9%B1%BC%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/b9634b8a1b114264b50f327d5f17a286.png" alt="在这里插入图片描述"></p><p>&#x3D;&#x3D;本篇文章仅用于学习交流，不得用于其他违规用途。&#x3D;&#x3D;</p><h2 id="1、钓鱼软件是什么？"><a href="#1、钓鱼软件是什么？" class="headerlink" title="1、钓鱼软件是什么？"></a>1、钓鱼软件是什么？</h2><p><em><strong>钓鱼软件是通常以精心设计的虚假网页引诱用户上当,达到盗取银行账号、信用卡号码等目的,属于违法行为。</strong></em><br>钓鱼通常指伪装成银行及电子商务,窃取用户提交的银行帐号、密码等私密信息的网站,可用电脑管家进行查杀。</p><h2 id="2、为什么有钓鱼软件？"><a href="#2、为什么有钓鱼软件？" class="headerlink" title="2、为什么有钓鱼软件？"></a>2、为什么有钓鱼软件？</h2><p>不法分子用于骗取受害人的个人信息，利用受害者爱贪小便宜的心理。<br>红蓝对抗中获取信息的一种手段。</p><h2 id="3、编写一个简单的钓鱼软件"><a href="#3、编写一个简单的钓鱼软件" class="headerlink" title="3、编写一个简单的钓鱼软件"></a>3、编写一个简单的钓鱼软件</h2><h3 id="（1）易语言编写简单的钓鱼软件"><a href="#（1）易语言编写简单的钓鱼软件" class="headerlink" title="（1）易语言编写简单的钓鱼软件"></a>（1）易语言编写简单的钓鱼软件</h3><h4 id="a-易语言简介"><a href="#a-易语言简介" class="headerlink" title="a.易语言简介"></a>a.易语言简介</h4><p>易语言（EPL）是一门以中文作为程序代码<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A8%8B?fromModule=lemma_inlink">编程</a>语言，其以“<a href="https://baike.baidu.com/item/%E6%98%93/416877?fromModule=lemma_inlink">易</a>”著称，创始人为<a href="https://baike.baidu.com/item/%E5%90%B4%E6%B6%9B/13580434?fromModule=lemma_inlink">吴涛</a>。易语言早期版本的名字为E语言，也通常代指与之对应的<a href="https://baike.baidu.com/item/%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/298524?fromModule=lemma_inlink">集成开发环境</a>。其最早的版本的发布可追溯至2000年9月11日。创造易语言的初衷是进行用中文来编写程序的实践，方便中国人以中国人的思维编写程序，并不用再去学习西方思维。</p><h4 id="b-安装易语言"><a href="#b-安装易语言" class="headerlink" title="b.安装易语言"></a>b.安装易语言</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/a02dab14bb69e908dd6c64546f06d9dc.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/271ccb8fc43afa51a1080e130000ecc3.png"></p><h4 id="c-开启qq邮箱的相关设置，获取授权码"><a href="#c-开启qq邮箱的相关设置，获取授权码" class="headerlink" title="c.开启qq邮箱的相关设置，获取授权码"></a>c.开启qq邮箱的相关设置，获取授权码</h4><h4 id="d-画出框体"><a href="#d-画出框体" class="headerlink" title="d.画出框体"></a>d.画出框体</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/9f9a0e5beafd4fbf3b0f279d230d7121.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/a7960bda555fb1a9ebdc44994fb0b47e.png"></p><h4 id="e-编写程序"><a href="#e-编写程序" class="headerlink" title="e.编写程序"></a>e.编写程序</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/f1c99068fd2a4e4d61b5770fa840a007.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/e156c13a0805f88ca14ac3b61fc9b7f8.png"></p><h4 id="f-测试成功"><a href="#f-测试成功" class="headerlink" title="f.测试成功"></a>f.测试成功</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/bcd5349e4ebc49c771a7c008396a329e.png"></p><h3 id="（2）Python-Django编写钓鱼软件"><a href="#（2）Python-Django编写钓鱼软件" class="headerlink" title="（2）Python+Django编写钓鱼软件"></a>（2）Python+Django编写钓鱼软件</h3><h4 id="a-Django简介"><a href="#a-Django简介" class="headerlink" title="a.Django简介"></a>a.Django简介</h4><p>Django是一个开放<a href="https://baike.baidu.com/item/%E6%BA%90%E4%BB%A3%E7%A0%81/3814213?fromModule=lemma_inlink">源代码</a>的<a href="https://baike.baidu.com/item/Web%E5%BA%94%E7%94%A8%E6%A1%86%E6%9E%B6/4262233?fromModule=lemma_inlink">Web应用框架</a>，由<a href="https://baike.baidu.com/item/Python/407313?fromModule=lemma_inlink">Python</a>写成。采用了MTV的框架模式，即模型M，视图V和模版T。它最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的，即是CMS（内容管理系统）软件。</p><h4 id="b-安装Django模块"><a href="#b-安装Django模块" class="headerlink" title="b.安装Django模块"></a>b.安装Django模块</h4><p>pip3 install django&#x3D;&#x3D;3.0</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ac9db9eb40cd73ba78eda3282d330d8c.png"></p><h4 id="c-创建Django项目"><a href="#c-创建Django项目" class="headerlink" title="c.创建Django项目"></a>c.创建Django项目</h4><p>django-admin startproject steam_web </p><p><img src="https://img-blog.csdnimg.cn/img_convert/dc0bdec4a3d383241f6a20044f88462c.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/d98714f99ca263d14c6c859160c17f40.png"></p><h4 id="d-创建子应用"><a href="#d-创建子应用" class="headerlink" title="d.创建子应用"></a>d.创建子应用</h4><p>cd steam_web<br>python3 manage.py startapp login</p><p><img src="https://img-blog.csdnimg.cn/img_convert/bbec83404289950616492273c25abf87.png"></p><p>完成后会生成一个login的文件夹</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ce452a6f46e6404516c95a203a5158c6.png"></p><p>这个文件夹下我们需要用到models.py（数据模型）和view.py（用来控制页面逻辑）</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c986247b3f8b45f13192435c43e89317.png"></p><h4 id="e-查看环境是否配置成功"><a href="#e-查看环境是否配置成功" class="headerlink" title="e.查看环境是否配置成功"></a>e.查看环境是否配置成功</h4><p>使用pycharm打开这个项目，然后运行。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/92b724aa766e741fd586c278126284f7.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/11641bf0b70dba34b6e281e72e196c6f.png"></p><p>打开这个链接，发现成功：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8d020722b91885e8a7abfee60fce412f.png"></p><h4 id="f-修改setting-py文件"><a href="#f-修改setting-py文件" class="headerlink" title="f.修改setting.py文件"></a>f.修改setting.py文件</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/77ec73b78b6273a82c54032e287fee2b.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/f229a5fece2ab3248e51437271a8575a.png"></p><p>配置网站默认语言、时间</p><p><img src="https://img-blog.csdnimg.cn/img_convert/0fcf28a0caeef6c13b06a4662385ee1c.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/1a7a1bf470f88aab93a1154e4e869320.png"></p><p>刷新页面就变成中文了。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/2663b5a4b04aa3d15fa02843177d3597.png"></p><h4 id="g-导入所需文件"><a href="#g-导入所需文件" class="headerlink" title="g.导入所需文件"></a>g.导入所需文件</h4><p>这里从把steam官网扒下来，然后修改配置文件。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/783eff57100f062c1187fec7133152e6.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/255fdbc3c77ceeef1a4f5436c514cbad.png"></p><p>还需要更改html对应的参数。</p><h4 id="h-编写数据模型"><a href="#h-编写数据模型" class="headerlink" title="h.编写数据模型"></a>h.编写数据模型</h4><p>打开models.py文件，去创建一个模型类。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/3de62a668742718acd65f23ae3e81973.png"></p><h4 id="i-编写视图"><a href="#i-编写视图" class="headerlink" title="i.编写视图"></a>i.编写视图</h4><p>打开view.py文件，编写视图，是控制网站与用户的交互逻辑。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d9e062825dec537ca8262d0c0e08a296.png"></p><h4 id="j-在urls-py文件里编写路由"><a href="#j-在urls-py文件里编写路由" class="headerlink" title="j.在urls.py文件里编写路由"></a>j.在urls.py文件里编写路由</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/a3eb46320a30e08ee78d6d1914a0dc00.png"></p><h4 id="k-同步数据库"><a href="#k-同步数据库" class="headerlink" title="k.同步数据库"></a>k.同步数据库</h4><p>这里使用自带的sqlite3，文件型小型数据库</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c1638f69d88bc6c578a5aa78376442a1.png"></p><p>打开后，输入makemigrations，这是将数据模型中的字段编译成一个Python脚本，包含sql语言。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/18b8675d7a174be452e3cb106f5e3941.png"></p><p>执行后会生成一个0001_initial.py文件</p><p><img src="https://img-blog.csdnimg.cn/img_convert/0cf34702a2ffa83832080bc5dc6407ce.png"></p><p>然后再执行脚本，输入migrate将数据模型映射到数据库中。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/7891d72a45244b9c03769c6d22b9247f.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/20279ef4633fce7db3af1bfeefde315c.png"></p><h4 id="l-测试成功"><a href="#l-测试成功" class="headerlink" title="l.测试成功"></a>l.测试成功</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/ca1987399d51384464485fb9f9374d52.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/70f92b23b3e94ff8c93573a165379053.png"></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免杀</title>
      <link href="/2022/11/10/%E5%85%8D%E6%9D%80/"/>
      <url>/2022/11/10/%E5%85%8D%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/40478ce850604072871e356b57943a83.png" alt="在这里插入图片描述"><br>&#x3D;&#x3D;注意：本篇文章仅用于学习以及笔记记录，不得用于其他违规用途。&#x3D;&#x3D;</p><h1 id="一、什么是免杀"><a href="#一、什么是免杀" class="headerlink" title="一、什么是免杀"></a>一、什么是免杀</h1><p>免杀，也就是病毒与反间谍的对立面，英文为Anti-AntiVirus（简写Virus AV），翻译为“反杀毒技术”。<br>这是一种能使病毒木马免于被杀毒软件查杀的技术。<br>&#x3D;&#x3D;由于免杀技术涉及到很多方面，包括反汇编、逆向工程、系统漏洞等技术，难度很高，所以本篇文章内容基本上都是修改病毒、木马的内容改变特征码，从而躲避杀毒软件的查杀。&#x3D;&#x3D;<br>#二、为什么有免杀<br>当我们在做安全测试的过程中，经常会自己编写一些脚本或者制作一些工具，其中用到的一些命令或者代码函数的特征已经被各大杀毒软件给识别到了自己的木马病毒库中，所以我们经常需要对自己编写的脚本或者工具进行免杀。<br>#三、常见的免杀方法</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、加壳</span><br><span class="line"><span class="number">2</span>、ShellCode混淆，加密</span><br><span class="line"><span class="number">3</span>、各种语言的加载器</span><br><span class="line"><span class="number">4</span>、powershell混淆免杀</span><br><span class="line"><span class="number">5</span>、分离免杀（远程加载）shellcode和加载器不写在一个文件中，远程加载等。</span><br><span class="line"><span class="number">6</span>、白加黑（白名单程序执行恶意样本）</span><br><span class="line"><span class="number">7</span>、套接字免杀</span><br><span class="line"><span class="number">8</span>、使用一些免杀工具</span><br><span class="line"><span class="number">9</span>、自己写加载器</span><br><span class="line"><span class="number">10</span>、自己写远控</span><br></pre></td></tr></table></figure><h1 id="四、杀软介绍"><a href="#四、杀软介绍" class="headerlink" title="四、杀软介绍"></a>四、杀软介绍</h1><h2 id="1、杀软的基本原理"><a href="#1、杀软的基本原理" class="headerlink" title="1、杀软的基本原理"></a>1、杀软的基本原理</h2><p>常见的杀毒软件对程序的划分大致分为三种：<br><strong>无害</strong><br>没有任何的可疑行为，没有任何的特征符合病毒或木马<br><strong>可疑</strong><br>存在可疑行为：操作注册表，打开powershell，修改用户，操作敏感文件等<br><strong>存在病毒</strong><br>特征符合病毒或木马<br><strong>杀软常用识别恶意样本的方式</strong><br>静态查杀，动态查杀<br>##2、静态查杀<br><strong>特征码</strong><br>杀软会通过反编译的方式查看源代码，可以看到里面的一些函数和汇编代码<br>exe→函数→汇编<br>###（1）代码中的函数<br>virtualalloc，rtlmovememory，ntcreatthread等<br>主要都是windows api函数，尤其是和内存、堆、线程相关的函数，当然在python中如果存在cmd等关键词也是会被识别的。<br>危险函数，远控关键词（msf,conbalt strike）一些关键字（shellcode）<br>###（2）shellcode的特征<br><img src="https://img-blog.csdnimg.cn/f5117f2c227c404db575f993a4e9081f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2e9eed31ca8545a8a0aa3ccdfd39c425.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2e9226ba485b4cda91280390e1ee9bbc.png" alt="在这里插入图片描述"></p><p>以msf的shellcode举例，杀毒软件最常用的就是判断一部分的代码来识别，通常汇编层级下的代码要深入识别查杀堆杀毒软件来说有一定误判的风险，所以一般的杀毒引擎都是通过shellcode中的特征码来识别。<br>###（3）文件名和MD5<br>如果这个文件名使用了rlo翻转的话，无论是否是病毒都会直接杀，MD5值的话就是匹配样本库中的MD5值，看是否存在，这个一般都能规避掉。<br>###（4）加密（可疑）<br>使用加密解密行为对文件有额外保护措施<br>###（5）数字签名<br>判断当前程序的数字签名是否正常，可以使用签名伪造。<br>##3、动态查杀<br>通常这一步都是静态分析之后做的，部分杀毒软件会有沙盒，相当于开一个虚拟机运行一下恶意样本，看一下运行效果。<br>###（1）计算机相关<br>通常由r1或r2层挂监控的方式（类似于hook）当触发这些条件就会产生事件，例如：360会在系统的内核层对注册表和cmd进行监控，注册表的监控相对不那么严格，可以通过win32 api添加用户，通常杀软监控的有：<br>服务、注册表、组策略、放回去、敏感程序、用户敏感操作、敏感文件夹。<br>常见的绕过思路：替换方法，cmd用不了就用powershell（混淆，编码，加密），换函数api，或者用shellcode。<br>###（2）网络相关<br>IP，域名，证书匹配，查找通讯的IP活域名是否之前存在攻击行为<br>流量内容，事件特征，内容特征，结构特征。<br>常见的绕过思路：<br>TCP分段，内容加密，使用合法证书<br>##4、样本启动流程<br><img src="https://img-blog.csdnimg.cn/7d58a6726d664bcd9f62c04fcc15e490.png" alt="在这里插入图片描述"></p><h1 id="五、具体姿势"><a href="#五、具体姿势" class="headerlink" title="五、具体姿势"></a>五、具体姿势</h1><h2 id="1、加壳"><a href="#1、加壳" class="headerlink" title="1、加壳"></a>1、加壳</h2><p>加壳的全称应该是可执行程序资源压缩，压缩后的程序可以直接运行。<br>加壳的另一种常用的方式是在二进制的程序中植入一段代码，在运行的时候优先取得程序的控制权，之后再把控制权交还给原始代码，这样做的目的是隐藏程序真正的OEP（入口点，防止被破解）。大多数病毒就是基于此原理。<br>加壳就是隐藏程序的入口文件。<br>通过对恶意样本的加壳处理，把原本的入口函数，再封装一层，让杀软无法找到我们程序的正常入口文件，进而躲避杀软分析我们的恶意样本，进而免杀。<br>##2、什么是shellcode<br>shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。<br>shellcode常常使用机器语言编写，可在暂存器eip溢出后，塞入一段可以让CPU执行的shellcode机器码，让电脑可以执行攻击者的任意指令。<br>shellcode就是能够执行命令的机器码，不是一个exe，常见的exe木马是可以脱离内存存在硬盘中的，但是shellcode不可以，他必须在内存中才可以运行。<br>为了方便阅读，大部分的shellcode都是16进制显示给用户的。<br>本质：二进制-16进制-汇编代码<br>msf和cs生成的raw格式的payload就是一个二进制格式的文件。<br>##3、shellcode加载器原理<br>shellcode加载器：简单来说，就是一个执行shellcode可执行文件。<br><img src="https://img-blog.csdnimg.cn/f7a8d8c9761449128789cf70b22e9736.png" alt="在这里插入图片描述"><br>加载器就是你用编程语言写出来的那个程序，shellcode是这个程序里面的一部分，在程序中就是一段字符，不能直接运行，而加载器的作用就是让他可以运行起来，最后shellcode执行后就是简历一个stager（建立目标和攻击者之间通信的道路，cs中的beacon指的就是stager）<br>常见加载器的主要功能<br>1、获取shellcode<br>2、virtualalloc函数申请内存<br>3、将shellcode载入内存<br>4、createthread函数创建新线程<br>5、等待创建的线程运行结束<br>&#x3D;&#x3D;为什么要有加载器？&#x3D;&#x3D;<br>默认情况下你的shellcode就是一堆字符，无法在内存中运行，所以需要加载器帮助他放到内存中运行，这也是加载器干的活。<br>&#x3D;&#x3D;本来想举例子，但想了想不放出来了。&#x3D;&#x3D;</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
          <category> 安全知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息安全 </tag>
            
            <tag> 安全知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初始PocSuite3框架</title>
      <link href="/2022/11/10/%E5%88%9D%E8%AF%86pocsuite3%E6%A1%86%E6%9E%B6/"/>
      <url>/2022/11/10/%E5%88%9D%E8%AF%86pocsuite3%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/349f292ba21e4d78bc45d9142da6d3b0.png" alt="在这里插入图片描述"><br>&#x3D;&#x3D;本篇文章记录的是pocsuite3框架，仅用于学习记录交流，不得用作其他用途。&#x3D;&#x3D;</p><h1 id="一、pocsuite3介绍"><a href="#一、pocsuite3介绍" class="headerlink" title="一、pocsuite3介绍"></a>一、pocsuite3介绍</h1><h2 id="1、pocsuite3是什么？"><a href="#1、pocsuite3是什么？" class="headerlink" title="1、pocsuite3是什么？"></a>1、pocsuite3是什么？</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pocsuite3 是由Knownsec 404 团队开发的开源远程漏洞测试和概念验证开发框架。它配备了强大的概念验证引擎，为终极渗透测试人员和安全研究人员提供了许多不错的功能。并且该工具被kali收录到系统自带工具</span><br></pre></td></tr></table></figure><h2 id="2、为什么要使用它"><a href="#2、为什么要使用它" class="headerlink" title="2、为什么要使用它"></a>2、为什么要使用它</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">按照框架的开发规范编写的poc更加的标准</span><br><span class="line">pocsuite3内部帮助我们解决了并发的问题 , 支持多线程检测 , 就不用自己考虑线程的问题了</span><br><span class="line">pocsuite3集合了常见的网络测绘引擎的api , 更方便我们批量检测 , 可以直接和fofa语句联动</span><br></pre></td></tr></table></figure><p>特点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">PoC 脚本可以在 verify, attack, shell 模式下以不同的方式运行</span><br><span class="line">插件生态系统</span><br><span class="line">从任何地方（本地文件、redis、数据库、Seebug ...）动态加载 PoC 脚本</span><br><span class="line">从任何地方加载多目标（CIDR、本地文件、redis、数据库、Zoomeye、Shodan fofa ...）</span><br><span class="line">结果可以轻松导出</span><br><span class="line">动态补丁和钩子请求</span><br><span class="line">命令行工具和python包导入都可以使用</span><br><span class="line">IPV6 支持</span><br><span class="line">全球 HTTP/HTTPS/SOCKS 代理支持</span><br><span class="line">用于 PoC 脚本的简单蜘蛛 API</span><br><span class="line">与Seebug集成（用于从 Seebug 网站加载 PoC）</span><br><span class="line">与ZoomEye集成（用于从 ZoomEye 加载目标Dork）</span><br><span class="line">与Shodan集成（用于从 Shodan 加载目标Dork）</span><br><span class="line">与Ceye集成（用于验证盲 DNS 和 HTTP 请求）</span><br><span class="line">与Interactsh集成（用于验证盲 DNS 和 HTTP 请求）</span><br><span class="line">与 Fofa 集成（用于从 Fofa 加载目标Dork）</span><br><span class="line">使用 IDE 的友好调试 PoC 脚本</span><br></pre></td></tr></table></figure><h2 id="3、pocsuite3如何使用？"><a href="#3、pocsuite3如何使用？" class="headerlink" title="3、pocsuite3如何使用？"></a>3、pocsuite3如何使用？</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下载</span><br><span class="line">安装</span><br><span class="line">常见参数详情</span><br><span class="line">常见使用示例</span><br><span class="line">源码阅读</span><br><span class="line">简单的二开</span><br></pre></td></tr></table></figure><h1 id="二、下载安装和卸载"><a href="#二、下载安装和卸载" class="headerlink" title="二、下载安装和卸载"></a>二、下载安装和卸载</h1><p>项目地址：<a href="https://github.com/knownsec/pocsuite3">https://github.com/knownsec/pocsuite3</a><br>环境：<br>Python 3.7+<br>Works on Linux, Windows, Mac OSX, BSD, etc.<br>pip安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pocsuite3</span><br><span class="line"></span><br><span class="line"><span class="comment"># use other pypi mirror</span></span><br><span class="line">pip3 install <span class="literal">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple pocsuite3</span><br></pre></td></tr></table></figure><p>安装好的测试：<br><img src="https://img-blog.csdnimg.cn/54ba7e7334de4d3fbf32fcdbe1cba1c0.png" alt="在这里插入图片描述"><br>卸载<br>如果是pip3安装：pip3 uninstall pocsuite3<br>如果是git clone安装：pip3 uninstall pocsuite3<br>#三、使用参考<br>官方文档：<br><a href="https://github.com/knownsec/pocsuite3/blob/master/docs/USAGE.md">https://github.com/knownsec/pocsuite3/blob/master/docs/USAGE.md</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">D:\pocsuite <span class="literal">-h</span></span><br><span class="line"></span><br><span class="line">,<span class="literal">------</span>.                        ,<span class="literal">--</span>. ,<span class="literal">--</span>.       ,<span class="literal">----</span>.   &#123;<span class="number">1.9</span>.<span class="number">2</span><span class="literal">-nongit-20220415</span>&#125;</span><br><span class="line">|  .<span class="literal">--</span>. <span class="string">&#x27;,---. ,---.,---.,--.,--`--,-&#x27;</span>  <span class="string">&#x27;-.,---.&#x27;</span>.-.  |</span><br><span class="line">|  <span class="string">&#x27;--&#x27;</span> | .-. | .<span class="literal">--</span>(  .-<span class="string">&#x27;|  ||  ,--&#x27;</span>-.  .-| .-. : .<span class="string">&#x27; &lt;</span></span><br><span class="line"><span class="string">|  | --&#x27;</span><span class="string">&#x27; &#x27;</span>-<span class="string">&#x27; \ `--.-&#x27;</span>  `&#x27;  <span class="string">&#x27;&#x27;</span>  |  | |  | \   <span class="literal">--</span>/<span class="string">&#x27;-&#x27;</span>  |</span><br><span class="line">`--<span class="string">&#x27;     `---&#x27;</span> `-<span class="literal">--</span>`-<span class="literal">---</span><span class="string">&#x27; `----&#x27;</span>`--<span class="string">&#x27; `--&#x27;</span>  `-<span class="literal">---</span>`-<span class="literal">---</span><span class="string">&#x27;   https://pocsuite.org</span></span><br><span class="line"><span class="string">usage: pocsuite [options]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">optional arguments:</span></span><br><span class="line"><span class="string">  -h, --help            # 查看帮助信息</span></span><br><span class="line"><span class="string">  --version             # 查看版本</span></span><br><span class="line"><span class="string">  --update             # 更新pocsuite3版本</span></span><br><span class="line"><span class="string">  -v &#123;0,1,2,3,4,5,6&#125;    Verbosity level: 0-6 (default 1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Target: # 目标</span></span><br><span class="line"><span class="string">  At least one of these options has to be provided to define the target(s)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  -u URL [URL ...], --url URL [URL ...]   # 单个目标 </span></span><br><span class="line"><span class="string">                        Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;)</span></span><br><span class="line"><span class="string">  -f URL_FILE, --file URL_FILE   # 批量检测目标 , 每一行是一个url, 即一个目标</span></span><br><span class="line"><span class="string">                        Scan multiple targets given in a textual file</span></span><br><span class="line"><span class="string">  -r POC [POC ...]         # 加载poc文件 , 可以是本地或者远程的seebug</span></span><br><span class="line"><span class="string">  -k POC_KEYWORD    Filter PoC by keyword, e.g. ecshop    # 按照poc关键字筛选</span></span><br><span class="line"><span class="string">  -c CONFIGFILE         Load options from a configuration INI file  # 从配置INI文件加载选项</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Mode: # 模式</span></span><br><span class="line"><span class="string">  Pocsuite running mode options</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --verify              Run poc with verify mode      # poc验证模式</span></span><br><span class="line"><span class="string">  --attack              Run poc with attack mode    # poc攻击模式</span></span><br><span class="line"><span class="string">  --shell               Run poc with shell mode        # poc反弹shell模式</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Request:  # 请求</span></span><br><span class="line"><span class="string">  Network request options  # 网络请求选项 , 检测的本质也是发请求, 可以自定义一些请求头</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --cookie COOKIE       HTTP Cookie header value  </span></span><br><span class="line"><span class="string">  --host HOST           HTTP Host header value</span></span><br><span class="line"><span class="string">  --referer REFERER     HTTP Referer header value</span></span><br><span class="line"><span class="string">  --user-agent AGENT    HTTP User-Agent header value (default random)</span></span><br><span class="line"><span class="string">  --proxy PROXY         Use a proxy to connect to the target URL</span></span><br><span class="line"><span class="string">  --proxy-cred PROXY_CRED</span></span><br><span class="line"><span class="string">                        Proxy authentication credentials (name:password)   # 代理需要认证</span></span><br><span class="line"><span class="string">  --timeout TIMEOUT     Seconds to wait before timeout connection (default 30)</span></span><br><span class="line"><span class="string">  --retry RETRY         Time out retrials times # 超时, 重试次数</span></span><br><span class="line"><span class="string">  --delay DELAY         Delay between two request of one thread   # 一个线程的两个请求之间的延迟</span></span><br><span class="line"><span class="string">  --headers HEADERS     Extra headers (e.g. &quot;key1: value1\nkey2: value2&quot;)  # 请求头</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Account: # 账号</span></span><br><span class="line"><span class="string">  Telnet404, Shodan, CEye, Fofa account options</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --login-user LOGIN_USER   # 404账号</span></span><br><span class="line"><span class="string">                        Telnet404 login user</span></span><br><span class="line"><span class="string">  --login-pass LOGIN_PASS  # 404密码</span></span><br><span class="line"><span class="string">                        Telnet404 login password</span></span><br><span class="line"><span class="string">  --shodan-token SHODAN_TOKEN  # 撒旦账号的token</span></span><br><span class="line"><span class="string">                        Shodan token</span></span><br><span class="line"><span class="string">  --fofa-user FOFA_USER     # fofa账号</span></span><br><span class="line"><span class="string">                        fofa user</span></span><br><span class="line"><span class="string">  --fofa-token FOFA_TOKEN  # fofa 账号的token</span></span><br><span class="line"><span class="string">                        fofa token</span></span><br><span class="line"><span class="string">  --quake-token QUAKE_TOKEN # quake账号的token</span></span><br><span class="line"><span class="string">                        quake token</span></span><br><span class="line"><span class="string">  --censys-uid CENSYS_UID # censys 账号的uid</span></span><br><span class="line"><span class="string">                        Censys uid</span></span><br><span class="line"><span class="string">  --censys-secret CENSYS_SECRET  # censys 账号的secret</span></span><br><span class="line"><span class="string">                        Censys secret</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Modules: # 模块 , 可以直接结合网络空间测绘引擎的语句直接批量检测</span></span><br><span class="line"><span class="string">  Modules(Seebug, Zoomeye, CEye, Fofa, Quake, Listener) options</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --dork DORK           Zoomeye dork used for search   # 默认钟馗之眼的语句</span></span><br><span class="line"><span class="string">  --dork-zoomeye DORK_ZOOMEYE</span></span><br><span class="line"><span class="string">                        Zoomeye dork used for search</span></span><br><span class="line"><span class="string">  --dork-shodan DORK_SHODAN</span></span><br><span class="line"><span class="string">                        Shodan dork used for search</span></span><br><span class="line"><span class="string">  --dork-censys DORK_CENSYS</span></span><br><span class="line"><span class="string">                        Censys dork used for search</span></span><br><span class="line"><span class="string">  --dork-fofa DORK_FOFA</span></span><br><span class="line"><span class="string">                        Fofa dork used for search</span></span><br><span class="line"><span class="string">  --dork-quake DORK_QUAKE</span></span><br><span class="line"><span class="string">                        Quake dork used for search</span></span><br><span class="line"><span class="string">  --max-page MAX_PAGE   Max page used in search API  # 最大的页数 , 不好使</span></span><br><span class="line"><span class="string">  --search-type SEARCH_TYPE</span></span><br><span class="line"><span class="string">                        search type used in ZoomEye API, web or host   # 搜索类型</span></span><br><span class="line"><span class="string">  --vul-keyword VUL_KEYWORD</span></span><br><span class="line"><span class="string">                        Seebug keyword used for search      # 使用Seebug漏洞关键字搜索</span></span><br><span class="line"><span class="string">  --ssv-id SSVID        Seebug SSVID number for target PoC  # 使用 ssv-id搜索对应的poc</span></span><br><span class="line"><span class="string">  --lhost CONNECT_BACK_HOST</span></span><br><span class="line"><span class="string">                        Connect back host for target PoC in shell mode  # shell模式下的反弹ip</span></span><br><span class="line"><span class="string">  --lport CONNECT_BACK_PORT</span></span><br><span class="line"><span class="string">                        Connect back port for target PoC in shell mode    # shell模式下的反弹port</span></span><br><span class="line"><span class="string">  --tls                 Enable TLS listener in shell mode</span></span><br><span class="line"><span class="string">  --comparison          Compare popular web search engines   # 使用比较流行的搜索引擎搜索</span></span><br><span class="line"><span class="string">  --dork-b64            Whether dork is in base64 format         # 语句的base64格式</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Optimization: # 选项</span></span><br><span class="line"><span class="string">  Optimization options</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --plugins PLUGINS     Load plugins to execute   # 加载插件执行</span></span><br><span class="line"><span class="string">  --pocs-path POCS_PATH  </span></span><br><span class="line"><span class="string">                        User defined poc scripts path    # 用户定义的poc脚本路径</span></span><br><span class="line"><span class="string">  --threads THREADS     Max number of concurrent network requests (default 1)  # 线程数</span></span><br><span class="line"><span class="string">  --batch BATCH         Automatically choose defaut choice without asking    # 自动选择默认的询问</span></span><br><span class="line"><span class="string">  --requires            Check install_requires    # 检查安装要求</span></span><br><span class="line"><span class="string">  --quiet               Activate quiet mode, working without logger   # 安静模式, 终端不输出日志</span></span><br><span class="line"><span class="string">  --ppt                 Hiden sensitive information when published to the network # 在发布到网络时隐藏敏感信                                               息</span></span><br><span class="line"><span class="string">  --pcap                use scapy capture flow  # 使用scapy捕获流</span></span><br><span class="line"><span class="string">  --rule                export suricata rules, default export reqeust and response  # 导出suricata规则、默认导出请求和响应</span></span><br><span class="line"><span class="string">  --rule-req            only export request rule  # 只导出请求规则</span></span><br><span class="line"><span class="string">  --rule-filename RULE_FILENAME   </span></span><br><span class="line"><span class="string">                        Specify the name of the export rule file   # 指定导出规则的文件名</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Poc options:  # poc 选项</span></span><br><span class="line"><span class="string">  definition options for PoC</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --options             Show all definition options   # 显示默认选项值</span></span><br></pre></td></tr></table></figure><h2 id="1、单个url"><a href="#1、单个url" class="headerlink" title="1、单个url"></a>1、单个url</h2><p>单个url使用验证模式运行poc，poc将仅用于漏洞扫描</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pocsuite <span class="literal">-r</span> pocs/poc_example.py <span class="literal">-u</span> http://www.example.com/ <span class="literal">--verify</span></span><br><span class="line">                       poc文件的路径                  待检测的url</span><br><span class="line">                       </span><br><span class="line">pocsuite <span class="literal">-r</span> pocs/thinkphp_rce_myself.py  <span class="literal">-u</span> http://<span class="number">192.168</span>.<span class="number">1.159</span>:<span class="number">8080</span> <span class="literal">--verify</span></span><br></pre></td></tr></table></figure><h2 id="2、批量检测"><a href="#2、批量检测" class="headerlink" title="2、批量检测"></a>2、批量检测</h2><p>扫描文本文件中给定的多个目标</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pocsuite <span class="literal">-r</span> pocs/poc_example.py <span class="operator">-f</span> url.txt <span class="literal">--verify</span></span><br></pre></td></tr></table></figure><h2 id="3、使用Seebug-SSVID"><a href="#3、使用Seebug-SSVID" class="headerlink" title="3、使用Seebug SSVID"></a>3、使用Seebug SSVID</h2><p>POCFILE 可以是文件或 Seebug SSVID。pocsuite 插件可以从任何地方加载 poc 代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pocsuite <span class="literal">-r</span> ssvid<span class="literal">-97343</span> <span class="literal">-u</span> http://www.example.com <span class="literal">--shell</span></span><br></pre></td></tr></table></figure><h2 id="4、验证模式"><a href="#4、验证模式" class="headerlink" title="4、验证模式"></a>4、验证模式</h2><p><strong>–verify</strong> 使用验证模式运行 poc。PoC(s) 将仅用于漏洞扫描</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pocsuite <span class="literal">-r</span> pocs/poc_example.py <span class="literal">-u</span> http://www.example.com/ <span class="literal">--verify</span></span><br></pre></td></tr></table></figure><h2 id="5、攻击模式"><a href="#5、攻击模式" class="headerlink" title="5、攻击模式"></a>5、攻击模式</h2><p><strong>–attack</strong> 以攻击模式运行 poc，PoC(s) 将被利用，它可能允许黑客&#x2F;研究人员闯入实验室</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pocsuite <span class="literal">-r</span> pocs/poc_example.py <span class="literal">-u</span> http://www.example.com/ <span class="literal">--attack</span></span><br><span class="line">pocsuite <span class="literal">-r</span> pocs/thinkphp_rce2.py  <span class="literal">-u</span> http://<span class="number">192.168</span>.<span class="number">6.29</span>:<span class="number">8080</span>/ <span class="literal">--attack</span></span><br></pre></td></tr></table></figure><h2 id="6、shell模式"><a href="#6、shell模式" class="headerlink" title="6、shell模式"></a>6、shell模式</h2><p><strong>–shell</strong> 以 shell 模式运行 poc，PoC 将可被利用，当 PoC shellcode 成功执行时，pocsuite3 将进入交互式 shell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pocsuite <span class="literal">-r</span> pocs/poc_example.py <span class="literal">-u</span> http://www.example.com <span class="literal">--shell</span></span><br></pre></td></tr></table></figure><h2 id="7、线程数"><a href="#7、线程数" class="headerlink" title="7、线程数"></a>7、线程数</h2><p>使用多线程，默认线程数为1<br>pocsuite -r pocs&#x2F;poc_example.py -f url.txt –verify –threads 10<br>##8、fofa语句<br>如果是fofa用户，可以使用fofa语句进行批量查询</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pocsuite <span class="literal">-r</span> pocs/thinkphp_rce2.py <span class="literal">--dork-fofa</span> <span class="string">&#x27;body=\&quot;thinkphp\&quot;&#x27;</span> <span class="literal">--search-type</span> web <span class="literal">--thread</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h1 id="四、POC编写"><a href="#四、POC编写" class="headerlink" title="四、POC编写"></a>四、POC编写</h1><p>官方文档：<br><a href="https://github.com/knownsec/pocsuite3/blob/master/docs/CODING.md">https://github.com/knownsec/pocsuite3/blob/master/docs/CODING.md</a><br>模版路径：<br>D:\software\python3\Lib\site-packages\pocsuite3\pocs\demo_poc.py<br>模版分析：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```python</span><br><span class="line">from collections import OrderedDict</span><br><span class="line">from pocsuite3.api import (</span><br><span class="line">    Output,</span><br><span class="line">    POCBase,</span><br><span class="line">    POC_CATEGORY,</span><br><span class="line">    register_poc,</span><br><span class="line">    requests,</span><br><span class="line">    VUL_TYPE,</span><br><span class="line">    get_listener_ip,</span><br><span class="line">    get_listener_port,</span><br><span class="line">)</span><br><span class="line">from pocsuite3.lib.core.interpreter_option import (</span><br><span class="line">    OptString,</span><br><span class="line">    OptDict,</span><br><span class="line">    OptIP,</span><br><span class="line">    OptPort,</span><br><span class="line">    OptBool,</span><br><span class="line">    OptInteger,</span><br><span class="line">    OptFloat,</span><br><span class="line">    OptItems,</span><br><span class="line">)</span><br><span class="line">from pocsuite3.modules.listener import REVERSE_PAYLOAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以上就是各种导入模块而已 , 有的用了 , 有的灰色的就是没有使用模块中的内容</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoPOC</span>(<span class="title">POCBase</span>):</span></span><br><span class="line"><span class="class">    <span class="title">vulID</span> = &quot;1571&quot;  # <span class="title">ssvid</span> <span class="title">ID</span> 如果是提交漏洞的同时提交 <span class="title">PoC</span>,则写成 0</span></span><br><span class="line"><span class="class">    <span class="title">version</span> = &quot;1&quot;  # 默认为1</span></span><br><span class="line"><span class="class">    <span class="title">author</span> = &quot;<span class="title">seebug</span>&quot;  # <span class="title">PoC</span>作者的大名</span></span><br><span class="line"><span class="class">    <span class="title">vulDate</span> = &quot;2014-10-16&quot;  # 漏洞公开的时间,不知道就写今天</span></span><br><span class="line"><span class="class">    <span class="title">createDate</span> = &quot;2014-10-16&quot;  # 编写 <span class="title">PoC</span> 的日期</span></span><br><span class="line"><span class="class">    <span class="title">updateDate</span> = &quot;2014-10-16&quot;  # <span class="title">PoC</span> 更新的时间,默认和编写时间一样</span></span><br><span class="line"><span class="class">    <span class="title">references</span> = [&quot;<span class="title">https</span>://<span class="title">xxx</span>.<span class="title">xx</span>.<span class="title">com</span>.<span class="title">cn</span>&quot;]  # 漏洞地址来源,0<span class="title">day</span>不用写</span></span><br><span class="line"><span class="class">    <span class="title">name</span> = &quot;<span class="title">XXXX</span> <span class="title">SQL</span>注入漏洞 <span class="title">PoC</span>&quot;  # <span class="title">PoC</span> 名称</span></span><br><span class="line"><span class="class">    <span class="title">appPowerLink</span> = &quot;<span class="title">https</span>://<span class="title">www</span>.<span class="title">drupal</span>.<span class="title">org</span>/&quot;  # 漏洞厂商主页地址</span></span><br><span class="line"><span class="class">    <span class="title">appName</span> = &quot;<span class="title">Drupal</span>&quot;  # 漏洞应用名称</span></span><br><span class="line"><span class="class">    <span class="title">appVersion</span> = &quot;7.<span class="title">x</span>&quot;  # 漏洞影响版本</span></span><br><span class="line"><span class="class">    <span class="title">vulType</span> = <span class="title">VUL_TYPE</span>.<span class="title">UNAUTHORIZED_ACCESS</span>  # 漏洞类型,类型参考见 漏洞类型规范表</span></span><br><span class="line"><span class="class">    <span class="title">category</span> = <span class="title">POC_CATEGORY</span>.<span class="title">EXPLOITS</span>.<span class="title">WEBAPP</span></span></span><br><span class="line"><span class="class">    <span class="title">samples</span> = []  # 测试样列,就是用 <span class="title">PoC</span> 测试成功的网站</span></span><br><span class="line"><span class="class">    <span class="title">install_requires</span> = []  # <span class="title">PoC</span> 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《<span class="title">PoC</span>第三方模块依赖说明》填写</span></span><br><span class="line"><span class="class">    <span class="title">desc</span> = &quot;&quot;&quot;</span></span><br><span class="line"><span class="class">            <span class="title">Drupal</span> 在处理 <span class="title">IN</span> 语句时，展开数组时 <span class="title">key</span> 带入 <span class="title">SQL</span> 语句导致 <span class="title">SQL</span> 注入，</span></span><br><span class="line"><span class="class">            可以添加管理员、造成信息泄露。</span></span><br><span class="line"><span class="class">        &quot;&quot;&quot;  # 漏洞简要描述</span></span><br><span class="line"><span class="class">    <span class="title">pocDesc</span> = &quot;&quot;&quot;</span></span><br><span class="line"><span class="class">            <span class="title">poc</span>的用法描述</span></span><br><span class="line"><span class="class">        &quot;&quot;&quot;  # <span class="title">POC</span>用法描述</span></span><br><span class="line"><span class="class">    # 各种变量的定义 , 关于<span class="title">poc</span>的描述</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">def</span> _<span class="title">options</span>(<span class="title">self</span>):</span></span><br><span class="line"><span class="class">        &quot;&quot;&quot;如果<span class="title">poc</span>需要登录,这个是登录函数模板&quot;&quot;&quot;</span></span><br><span class="line"><span class="class">        <span class="title">opt</span> = <span class="title">OrderedDict</span>()  # <span class="title">value</span> = <span class="title">self</span>.<span class="title">get_option</span>(&#x27;<span class="title">key</span>&#x27;)</span></span><br><span class="line"><span class="class">        <span class="title">opt</span>[&quot;<span class="title">string</span>&quot;] = <span class="title">OptString</span>(&quot;&quot;, <span class="title">description</span>=&quot;这个<span class="title">poc</span>需要用户登录，请输入登录账号&quot;, <span class="title">require</span>=<span class="title">True</span>)</span></span><br><span class="line"><span class="class">        <span class="title">opt</span>[&quot;<span class="title">integer</span>&quot;] = <span class="title">OptInteger</span>(</span></span><br><span class="line"><span class="class">            &quot;&quot;, <span class="title">description</span>=&quot;这个<span class="title">poc</span>需要用户密码，请输出用户密码&quot;, <span class="title">require</span>=<span class="title">False</span></span></span><br><span class="line"><span class="class">        )</span></span><br><span class="line"><span class="class">        <span class="title">return</span> <span class="title">opt</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">def</span> _<span class="title">verify</span>(<span class="title">self</span>):</span></span><br><span class="line"><span class="class">        # 重点是这个验证代码</span></span><br><span class="line"><span class="class">        <span class="title">output</span> = <span class="title">Output</span>(<span class="title">self</span>)</span></span><br><span class="line"><span class="class">        # 验证代码</span></span><br><span class="line"><span class="class">        <span class="title">result</span> =</span> &#123;</span><br><span class="line">            <span class="comment"># 不管是验证模式或者攻击模式，返回结果 result 中的 key 值必须按照下面的规范来写</span></span><br><span class="line">            <span class="comment"># [ PoC结果返回规范 ]( https://github.com/knownsec/pocsuite3/blob/master/docs/CODING.md#resultstandard )</span></span><br><span class="line">            <span class="string">&quot;Result&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;DBInfo&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;Username&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Password&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Salt&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Uid&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Groupid&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;ShellInfo&quot;</span>: &#123;<span class="string">&quot;URL&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;Content&quot;</span>: <span class="string">&quot;xxx&quot;</span>&#125;,</span><br><span class="line">                <span class="string">&quot;FileInfo&quot;</span>: &#123;<span class="string">&quot;Filename&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;Content&quot;</span>: <span class="string">&quot;xxx&quot;</span>&#125;,</span><br><span class="line">                <span class="string">&quot;XSSInfo&quot;</span>: &#123;<span class="string">&quot;URL&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;Payload&quot;</span>: <span class="string">&quot;xxx&quot;</span>&#125;,</span><br><span class="line">                <span class="string">&quot;AdminInfo&quot;</span>: &#123;<span class="string">&quot;Uid&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;Username&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;Password&quot;</span>: <span class="string">&quot;xxx&quot;</span>&#125;,</span><br><span class="line">                <span class="string">&quot;Database&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;Hostname&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Username&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Password&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;DBname&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;VerifyInfo&quot;</span>: &#123;<span class="string">&quot;URL&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;Postdata&quot;</span>: <span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;Path&quot;</span>: <span class="string">&quot;xxx&quot;</span>&#125;,</span><br><span class="line">                <span class="string">&quot;SiteAttr&quot;</span>: &#123;<span class="string">&quot;Process&quot;</span>: <span class="string">&quot;xxx&quot;</span>&#125;,</span><br><span class="line">                <span class="string">&quot;Stdout&quot;</span>: <span class="string">&quot;result output string&quot;</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> result:  <span class="comment"># result是返回结果</span></span><br><span class="line">            output.success(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output.fail(<span class="string">&quot;target is not vulnerable&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">    def _attack(self):</span><br><span class="line">        output = Output(self)</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        <span class="comment"># 攻击代码</span></span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def _shell(self):</span><br><span class="line">        <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">        shell模式下，只能运行单个PoC脚本，控制台会进入shell交互模式执行命令及输出</span></span><br><span class="line"><span class="string">        &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">        cmd = REVERSE_PAYLOAD.BASH.format(get_listener_ip(), get_listener_port())</span><br><span class="line">        <span class="comment"># 攻击代码 execute cmd</span></span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def other_fuc():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def other_utils_func():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册 DemoPOC 类</span></span><br><span class="line">register_poc(DemoPOC)</span><br></pre></td></tr></table></figure><pre><code>可以根据自己想法修改。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
          <category> 安全知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息安全 </tag>
            
            <tag> 安全知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win+UOS+mac三系统折腾日记</title>
      <link href="/2022/11/09/Win+UOS+%E9%BB%91%E8%8B%B9%E6%9E%9C%E4%B8%89%E7%B3%BB%E7%BB%9F%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/"/>
      <url>/2022/11/09/Win+UOS+%E9%BB%91%E8%8B%B9%E6%9E%9C%E4%B8%89%E7%B3%BB%E7%BB%9F%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>本篇文章为本人第一篇在网上发表的个人记录文章，在过去的很长时间折腾过不少东西，但都没有记录，昨夜辗转反复，终有想法乍现，以此文章作为折腾记录的开篇。本篇文章仅适用于<strong>DELL G3 3579</strong>，极少或不涉及其他型号电脑的方法，极少或不普及相关基础知识，欢迎各位看客提出宝贵的建议和指导。</p><h1 id="二、本机配置"><a href="#二、本机配置" class="headerlink" title="二、本机配置"></a>二、本机配置</h1><p>首先贴出陪伴我三年风风雨雨，此篇文章折腾的对象机配置：<strong>DELL G3 3579</strong>，于2019年对此电脑升级，加装8gb内存条，512G SDD，2T机械硬盘，于2021年更换tigo512GB固态为西部数据SN550 1T。配置如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20210329085447260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BZTVhZRw==,size_16,color_FFFFFF,t_70#pic_center" alt="本机配置"></p><h1 id="三、黑苹果"><a href="#三、黑苹果" class="headerlink" title="三、黑苹果"></a>三、黑苹果</h1><h2 id="（一）关于黑苹果"><a href="#（一）关于黑苹果" class="headerlink" title="（一）关于黑苹果"></a>（一）关于黑苹果</h2><p>自从苹果采用<strong>Intel</strong>的处理器，OS X被黑客破解后可以安装在Intel CPU与<strong>部分AMD CPU</strong>的机器上。从而出现了一大批<strong>非苹果设备</strong>而使用苹果操作系统的机器，被称为黑苹果(Hackintosh)；在Mac苹果机上面安装原版Mac系统的被称为白苹果（Macintosh），与黑苹果相对。<br>第一次折腾黑苹果是在2020年2月，当时属实把我折腾够呛，遇到各种各样问题，逐步解决了一部分问题，遇到的问题会在三（三）中列出，并写出当时的解决方法。（我们都是站在巨人的肩膀）</p><h2 id="（二）安装黑苹果"><a href="#（二）安装黑苹果" class="headerlink" title="（二）安装黑苹果"></a>（二）安装黑苹果</h2><h3 id="1、准备阶段"><a href="#1、准备阶段" class="headerlink" title="1、准备阶段"></a>1、准备阶段</h3><ul><li>准备一个16GB的空U盘</li><li>准备一台正常运行并配备可以正常使用windows的电脑或笔记本</li><li>准备Transmac软件或者BalenaEtcher（本篇文章使用BalenaEtcher）</li><li>准备一个苹果系统镜像，后缀名为dmg（本篇文章使用dmg版，使用10.15.6版本）</li><li>准备好DiskGenius软件</li><li>最好准备一个带有PE系统的U盘启动盘（方便救急）</li><li>确定磁盘为GUID分区形式（如果是MBR，可用DiskGenius转换）</li><li>使用DiskGenius在目标磁盘建立一个ESP分区表（300mb，我给了2G）</li><li>使用DiskGenius在目标磁盘剩余部分新建分区，格式为MAC OS X AFTS（或许其他也可以）</li><li>准备好一双手，一个不怕麻烦，不怕折腾的大脑</li></ul><h3 id="2、制作Mac安装盘"><a href="#2、制作Mac安装盘" class="headerlink" title="2、制作Mac安装盘"></a>2、制作Mac安装盘</h3><ul><li>插入U盘</li><li>打开BalenaEtcher</li><li>点击Select image，选择你的Mac系统镜像文件</li><li>点击Select drive，选择你的U盘</li><li>点击Flash，等待完成<br>注意：安装过程不要触碰到或拔掉U盘，当Flash完成后windows会弹出：“需要格式化磁盘”，点击取消即可。</li></ul><h3 id="3、使用U盘安装Mac"><a href="#3、使用U盘安装Mac" class="headerlink" title="3、使用U盘安装Mac"></a>3、使用U盘安装Mac</h3><ul><li><p>将电脑关机或重启，关机状态或重启前将U盘插到电脑上</p></li><li><p>在出现DELL logo时，按下F12（大部分电脑主板是F12）</p></li><li><p>选择U盘的名字，按下回车Enter</p></li><li><p>此时会出现Clover（本篇文章使用四叶草引导）引导菜单</p></li><li><p>选择Boot mac from install mac（从U盘启动安装）</p></li><li><p>随后开启经典的跑代码模式（白底黑字）</p></li><li><p>当代码跑完后，会看到苹果logo，进入到实用工具</p></li><li><p>选择磁盘工具，单击要安装的目标磁盘，点击抹盘，这里格式我选的日志式</p></li><li><p>抹盘成功后返回实用工具，选择安装Mac，选择安装目标磁盘</p></li><li><p>安装过程大概需要20分钟左右，中途会自动重启两次<br> （一般来说，重启直接选择Boot install mac from 磁盘名）</p></li><li><p>当最后一次重启后，就可以看到选地区时区界面，黑苹果就安装成功了。</p></li><li><p>然后需要进入PE或windows下的DiskGenius，将U盘EFI文件夹下的所有文件全部拷贝到之前分出来的ESP下EFI文件夹中。</p></li><li><p>最后单击DiskGenius菜单栏中的工具，下拉菜单最后一项，UEFI启动项设置，新增一个启动项，自命名，选择启动文件为Cloverx64.efi，保存设置，拔掉U盘即可。</p></li></ul><h2 id="（三）遇到的问题"><a href="#（三）遇到的问题" class="headerlink" title="（三）遇到的问题"></a>（三）遇到的问题</h2><h3 id="1、安装过程出现禁止标志"><a href="#1、安装过程出现禁止标志" class="headerlink" title="1、安装过程出现禁止标志"></a>1、安装过程出现禁止标志</h3><p>请更换硬盘模式，详细请了解AHCI和RAID。</p><h3 id="2、跑代码卡在Please-go-to-report-this-panic"><a href="#2、跑代码卡在Please-go-to-report-this-panic" class="headerlink" title="2、跑代码卡在Please go  to report this panic"></a>2、跑代码卡在Please go  to report this panic</h3><p>话不多说，建议换EFI。</p><h3 id="3、显存只显示3mb或者7mb"><a href="#3、显存只显示3mb或者7mb" class="headerlink" title="3、显存只显示3mb或者7mb"></a>3、显存只显示3mb或者7mb</h3><p>显卡补丁问题，仿冒或者换设置。</p><h3 id="4、硬件无法驱动（正常使用）"><a href="#4、硬件无法驱动（正常使用）" class="headerlink" title="4、硬件无法驱动（正常使用）"></a>4、硬件无法驱动（正常使用）</h3><h3 id="5、安装过程读不到固态硬盘"><a href="#5、安装过程读不到固态硬盘" class="headerlink" title="5、安装过程读不到固态硬盘"></a>5、安装过程读不到固态硬盘</h3><p>请更换硬盘模式，详细请了解AHCI和RAID，这里还有一种情况，部分固态不支持。</p><h3 id="6、安装提示应用程序副本已损坏"><a href="#6、安装提示应用程序副本已损坏" class="headerlink" title="6、安装提示应用程序副本已损坏"></a>6、安装提示应用程序副本已损坏</h3><p>根据你所安装的mac系统去百度，进入终端修改时间即可。</p><h3 id="7、五国图卡eb-卡"><a href="#7、五国图卡eb-卡" class="headerlink" title="7、五国图卡eb(卡++++++)"></a>7、五国图卡eb(卡++++++)</h3><p>话不多说，建议换EFI。</p><h3 id="8、更换EFI后不引导（还是进入win）"><a href="#8、更换EFI后不引导（还是进入win）" class="headerlink" title="8、更换EFI后不引导（还是进入win）"></a>8、更换EFI后不引导（还是进入win）</h3><p>请检查启动选项是否自动恢复，随后重新设置，建议手动选择开机启动项。</p><h3 id="9、五国图acpi-eror"><a href="#9、五国图acpi-eror" class="headerlink" title="9、五国图acpi eror"></a>9、五国图acpi eror</h3><p>详细请了解AHCI和RAID，话不多说，建议换EFI。</p><h3 id="10、五国图直接黑屏"><a href="#10、五国图直接黑屏" class="headerlink" title="10、五国图直接黑屏"></a>10、五国图直接黑屏</h3><p>话不多说，建议换EFI。</p><h3 id="11、啰嗦模式跑完代码黑屏有声音"><a href="#11、啰嗦模式跑完代码黑屏有声音" class="headerlink" title="11、啰嗦模式跑完代码黑屏有声音"></a>11、啰嗦模式跑完代码黑屏有声音</h3><p>时间太久，我记得是显卡的问题，当然不是硬件问题，重启试试？我真这样解决过。</p><h3 id="12、五国图卡在HID-Legacy-shim-2"><a href="#12、五国图卡在HID-Legacy-shim-2" class="headerlink" title="12、五国图卡在HID Legacy shim 2"></a>12、五国图卡在HID Legacy shim 2</h3><p>话不多说，建议换EFI。</p><h3 id="13、clover更改配置不生效"><a href="#13、clover更改配置不生效" class="headerlink" title="13、clover更改配置不生效"></a>13、clover更改配置不生效</h3><p>请仔细检查现在所使用的clover是否为你更改的。</p><h3 id="14、驱动问题"><a href="#14、驱动问题" class="headerlink" title="14、驱动问题"></a>14、驱动问题</h3><p>驱动问题真是头疼，切记安装驱动的时候备份好。</p><h1 id="四、UOS统信"><a href="#四、UOS统信" class="headerlink" title="四、UOS统信"></a>四、UOS统信</h1><h2 id="（一）关于UOS统信"><a href="#（一）关于UOS统信" class="headerlink" title="（一）关于UOS统信"></a>（一）关于UOS统信</h2><p>统信UOS 是由包括中国电子集团、深度科技公司等发起的项目，全称为 Unity Operating System，是一款中文国产操作系统。是统信软件基于Linux5.3内核打造，专为个人用户推出的一款安全稳定、美观易用的桌面操作系统。</p><h2 id="（二）安装UOS统信"><a href="#（二）安装UOS统信" class="headerlink" title="（二）安装UOS统信"></a>（二）安装UOS统信</h2><h3 id="1、准备阶段-1"><a href="#1、准备阶段-1" class="headerlink" title="1、准备阶段"></a>1、准备阶段</h3><ul><li>准备一个16GB以上的U盘</li><li>准备统信UOS系统安装镜像</li><li>准备BalenaEther软件（本篇文章使用BalenaEther）</li><li>准备一台可以正常使用的电脑（此承接上一步，已安装好黑苹果）</li><li>将本机的512GB（实际477GB）固态卷压缩，压缩出一个200GB的空盘</li></ul><h3 id="2、制作UOS安装盘"><a href="#2、制作UOS安装盘" class="headerlink" title="2、制作UOS安装盘"></a>2、制作UOS安装盘</h3><pre><code>打开BalenaEther软件，选择U盘，选择镜像，点击Flash开始烧录U盘。</code></pre><h3 id="3、安装UOS系统"><a href="#3、安装UOS系统" class="headerlink" title="3、安装UOS系统"></a>3、安装UOS系统</h3><ul><li>烧录完成后，重启电脑，保持U盘插入状态，按F12（本机是F12）进入快速启动菜单，选择U盘名字，进入后选择第一个，install UOS。</li><li>进入欢迎界面，选好一些简单设置，进入分盘页面</li><li>分盘可以手动分盘，也可以自动分盘，但自动分盘会选择整个磁盘并且将磁盘完全变为UOS系统格式。</li><li>选择手动分盘（此文选择手动分盘），选择之前压缩出的200GB空盘，点击此盘右上角➕号标志，分出多个分区，EFI分区不用加载，UOS会自动读出之前的EFI，并把UOS系统加到ESP分区的EFI文件夹下。</li><li>分区情况：可以二分区，三分区，多分区。（本文采用多分区）新建&#x2F;boot分区（建议2GB），新建swap交换分区（建议本身运存*2，本文16GB），新建&#x2F;分区（根分区），主分区 起点 ext4（必须大于10GB），新建&#x2F;usr&#x2F;local分区（建议100GB），新建&#x2F;home分区（建议200GB），新建&#x2F;opt（看情况），新建&#x2F;recovery分区（备份分区，建议10GB）。</li><li>分区完成后进行下一步，等待一段时间后会重启，可以拔掉U盘，进入clover引导菜单，会看到多了UOS和乌班图以及linux，选择UOS进入（实测三个都会进入UOS），进入后设置一系列设置就可以进入桌面了。</li></ul><h2 id="（三）遇到的问题-1"><a href="#（三）遇到的问题-1" class="headerlink" title="（三）遇到的问题"></a>（三）遇到的问题</h2><h3 id="1、安装时读不到电脑固态"><a href="#1、安装时读不到电脑固态" class="headerlink" title="1、安装时读不到电脑固态"></a>1、安装时读不到电脑固态</h3><p>请详细了解AHCI和RAID，不妨换一下。</p><h3 id="2、如何手动分区"><a href="#2、如何手动分区" class="headerlink" title="2、如何手动分区"></a>2、如何手动分区</h3><p>参照上面手动分盘。</p><h3 id="3、其他输入法无法使用"><a href="#3、其他输入法无法使用" class="headerlink" title="3、其他输入法无法使用"></a>3、其他输入法无法使用</h3><p>建议百度，是可以解决的。</p><h3 id="4、设置中没有蓝牙选项"><a href="#4、设置中没有蓝牙选项" class="headerlink" title="4、设置中没有蓝牙选项"></a>4、设置中没有蓝牙选项</h3><p>重启你会发现有了，但偶尔也还会出现。</p><h1 id="五、Windows"><a href="#五、Windows" class="headerlink" title="五、Windows"></a>五、Windows</h1><h2 id="（一）关于Windows"><a href="#（一）关于Windows" class="headerlink" title="（一）关于Windows"></a>（一）关于Windows</h2><p>Microsoft Windows操作系统是美国微软公司研发的一套操作系统，它问世于1985年，起初仅仅是MS-DOS模拟环境，后续的系统版本由于微软不断的更新升级，不但易用，也成为了当前应用最广泛的操作系统。</p><h2 id="（二）安装Windows"><a href="#（二）安装Windows" class="headerlink" title="（二）安装Windows"></a>（二）安装Windows</h2><h3 id="1、准备阶段-2"><a href="#1、准备阶段-2" class="headerlink" title="1、准备阶段"></a>1、准备阶段</h3><ul><li>准备一个16GB的空U盘</li><li>准备好一个系统镜像（GHO可以去系统之家，推荐深度，setup可以去MSDN I tell you）</li><li>准备好PE启动盘制作软件（大白菜，老毛桃，U启动）</li><li>准备好一双手（一只也行），准备好一个不怕麻烦的大脑</li><li>准备好百度</li></ul><h3 id="2、制作PE启动盘"><a href="#2、制作PE启动盘" class="headerlink" title="2、制作PE启动盘"></a>2、制作PE启动盘</h3><ul><li>插入U盘，打开大白菜（本文使用大白菜）</li><li>选择HDD，ZIP适用于老电脑装XP</li><li>点击一键制作，然后等待完成，可以模拟测试一下</li></ul><h3 id="3、安装Windows"><a href="#3、安装Windows" class="headerlink" title="3、安装Windows"></a>3、安装Windows</h3><h4 id="（1）第一种方法：GHO镜像还原"><a href="#（1）第一种方法：GHO镜像还原" class="headerlink" title="（1）第一种方法：GHO镜像还原"></a>（1）第一种方法：GHO镜像还原</h4><p> 很老的方法，有时候也会出很多问题，如果你不用一键还原工具的话，希望你英语好。  </p><h4 id="（2）第二种方法：setup安装"><a href="#（2）第二种方法：setup安装" class="headerlink" title="（2）第二种方法：setup安装"></a>（2）第二种方法：setup安装</h4><p>用安装盘呗，不过也有两种方式，第一种是对于有完好win10的，可以从高级选项进入命令符模式，手动运行setup.exe，第二种是PE，不过有一部分概率会因为GUID和mbr报错，更换即可，也可能出现我们无法安装，建议百度，有极小概率无法解决。真的极小极小，不过你可以用GHO读文件夹中的镜像，也可以安装，不过算是简易安装。</p><h4 id="（3）总结"><a href="#（3）总结" class="headerlink" title="（3）总结"></a>（3）总结</h4><p>电脑么，程序么，有时候就是奇奇怪怪的，很多错误都可能会报同一个日志，多排错，逻辑清晰。</p><h1 id="六、三系统常见问题"><a href="#六、三系统常见问题" class="headerlink" title="六、三系统常见问题"></a>六、三系统常见问题</h1><h2 id="（一）双系统或三系统时间不正确"><a href="#（一）双系统或三系统时间不正确" class="headerlink" title="（一）双系统或三系统时间不正确"></a>（一）双系统或三系统时间不正确</h2><h2 id="（二）安装黑苹果后关机不断电，时间停留在上次关机时间"><a href="#（二）安装黑苹果后关机不断电，时间停留在上次关机时间" class="headerlink" title="（二）安装黑苹果后关机不断电，时间停留在上次关机时间"></a>（二）安装黑苹果后关机不断电，时间停留在上次关机时间</h2><p>这个问题当时困扰了我很久，换过cmos也没用，实际上很简单，如果你在百度上找到的方法没用，不妨制作一个linux安装盘，然后不要安装，选择从U盘体验，重启，你会发现个惊喜，或者装了统信卸载也可以。</p><h2 id="（三）clover引导菜单太多启动项"><a href="#（三）clover引导菜单太多启动项" class="headerlink" title="（三）clover引导菜单太多启动项"></a>（三）clover引导菜单太多启动项</h2><p>这个网上教程就很详细了，建议不要手动改，可能会变得不认识。</p><h2 id="（四）clover引导菜单倒计时只有五秒"><a href="#（四）clover引导菜单倒计时只有五秒" class="headerlink" title="（四）clover引导菜单倒计时只有五秒"></a>（四）clover引导菜单倒计时只有五秒</h2><p>参上。</p><h2 id="（五）clover引导更改主题"><a href="#（五）clover引导更改主题" class="headerlink" title="（五）clover引导更改主题"></a>（五）clover引导更改主题</h2><p>参上，记得安装几个插件，有两个插件提供服务。</p><h2 id="（六）clover引导换OC引导"><a href="#（六）clover引导换OC引导" class="headerlink" title="（六）clover引导换OC引导"></a>（六）clover引导换OC引导</h2><p>这个请对照其他详细教程，太久没印象了，记得挺简单的，包括之后的OC引导手动升级。</p><h1 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h1><p>第一篇文章，实际上在草稿箱躺了很久，以至于很多细节忘掉了，现在也换电脑了，新电脑目前还没有办法装黑果，请各位看官海涵，有什么问题可以评论，看到会回复的，在过程中也遇到了许许多多问题，踩到了很多的坑，感谢大家，一定要有一颗敢于折腾的心。</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/07/Hello-world/"/>
      <url>/2022/11/07/Hello-world/</url>
      
        <content type="html"><![CDATA[<p>这是我第一次使用Hexo搭建博客，并使用Github的page功能部署网站。</p><h2 id="开篇阐述"><a href="#开篇阐述" class="headerlink" title="开篇阐述"></a>开篇阐述</h2><h3 id="这是一个新身份"><a href="#这是一个新身份" class="headerlink" title="这是一个新身份"></a>这是一个新身份</h3><p>现在我的身份是一名2022届应届毕业生，而我马上也将找到工作，成为一名职场人。</p><h3 id="这是一个新阶段"><a href="#这是一个新阶段" class="headerlink" title="这是一个新阶段"></a>这是一个新阶段</h3><p>现在我的阶段是刚刚学习结束，即将投递简历，去寻找我未来的公司和城市。</p><h3 id="感谢大家"><a href="#感谢大家" class="headerlink" title="感谢大家"></a>感谢大家</h3><p>身边的每一个人，我都格外珍惜，我的家人，我的朋友，以及对我生活和工作有帮助的人。</p><h3 id="感谢自己"><a href="#感谢自己" class="headerlink" title="感谢自己"></a>感谢自己</h3><p>我不断的去斗争，不断的去学习，不断的去折腾，才能有今天较为丰满的精神状态和斗志。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一些随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
